{"ast":null,"code":"var _jsxFileName = \"/Users/gaughanln/Desktop/Homework/Brew-tique/client/src/components/User.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport cheers from '../assets/cheers.png';\nimport { Link } from 'react-router-dom';\nimport { gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GET_USERS = gql`\n query GetUsers {\n  users {\n    id\n    firstName\n    lastName\n    email\n  }\n}\n `;\nfunction User() {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_USERS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 21\n  }, this);\n\n  // const [userInfo, setUserInfo] = useState({\n  //   name: {\n  //     firstName: '',\n  //     lastName: ''\n  //   },\n  //   email: 'gaughanln@yahoo.com',\n  //   address: 'Houston'\n  // });\n\n  // const [editing, setEditing] = useState(false);\n  // const [nameEditable, setNameEditable] = useState(false);\n\n  // fetch data fromt he database using graphql api\n\n  //TODO\n  // make input boxes NOT editable until the pencil is clicked\n  // TODO ensure the information gets saved back to the database and it updates\n  // TODO when you click on the pencil to edit, it then turns into a save button\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.users.map(users => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [users.firstName, \" \", users.lastName]\n    }, users.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this))\n  }, void 0, false);\n}\n_s(User, \"ATRudwUnWENk7lEGiyv3yjumjxE=\", false, function () {\n  return [useQuery];\n});\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useState","cheers","Link","gql","useQuery","jsxDEV","_jsxDEV","Fragment","_Fragment","GET_USERS","User","_s","loading","error","data","children","fileName","_jsxFileName","lineNumber","columnNumber","message","users","map","firstName","lastName","id","_c","$RefreshReg$"],"sources":["/Users/gaughanln/Desktop/Homework/Brew-tique/client/src/components/User.js"],"sourcesContent":["import React, { useState } from 'react';\nimport cheers from '../assets/cheers.png'\nimport { Link } from 'react-router-dom';\nimport { gql, useQuery } from '@apollo/client';\n\n const GET_USERS = gql`\n query GetUsers {\n  users {\n    id\n    firstName\n    lastName\n    email\n  }\n}\n `;\n\nfunction User() {\n\n  const {loading, error, data} = useQuery(GET_USERS)\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n \n\n  \n  // const [userInfo, setUserInfo] = useState({\n  //   name: {\n  //     firstName: '',\n  //     lastName: ''\n  //   },\n  //   email: 'gaughanln@yahoo.com',\n  //   address: 'Houston'\n  // });\n\n  // const [editing, setEditing] = useState(false);\n  // const [nameEditable, setNameEditable] = useState(false);\n\n// fetch data fromt he database using graphql api\n  \n  //TODO\n  // make input boxes NOT editable until the pencil is clicked\n  // TODO ensure the information gets saved back to the database and it updates\n  // TODO when you click on the pencil to edit, it then turns into a save button\n\n  return (\n\n\n    \n    <>\n\n{data.users.map((users) => (\n    <li key={users.id}>\n      {users.firstName} {users.lastName}\n    </li>\n  ))}\n\n      {/* <div className=\"row user valign-wrapper\">\n        <div class=\"col s6 \">\n          <span className=\"myaccount-text\">\n            <h1> My Account <Link>\n              {editing ? \"Save\" :\n                <img src='https://cdn-icons-png.flaticon.com/512/2541/2541991.png'\n                  width=\"40\"\n                  height=\"40\"\n                  className=\"pencil-icon\"\n                  alt=\"pencil icon\" />\n              }\n            </Link> </h1>\n\n            <h3 className =\"user-text\"> Name </h3>\n            <div class=\"input-field col s6\">\n          <input placeholder=\"Placeholder\" id=\"first_name\" value={`${userInfo.name.firstName}`} type=\"text\" class=\"validate\"/>\n          <label for=\"first_name\"></label>\n        </div>\n        <div class=\"input-field col s6\">\n          <input id=\"last_name\" \n          value={`${userInfo.name.lastName}`} type=\"text\" class=\"validate\"/>\n          <label for=\"last_name\" placeholder = \"last name\" ></label>\n        </div> */}\n           \n            {/* <input\n              type=\"text\"\n              id=\"name\"\n              value={`${userInfo.name.firstName} ${userInfo.name.lastName}`}\n              disabled={!nameEditable}\n              onChange={e => {\n                const [firstName, lastName] = e.target.value.split(' ');\n                setUserInfo({\n                  ...userInfo,\n                  name: {\n                    firstName,\n                    lastName\n                  }\n                })\n              }}\n            /> */}\n\n{/* \n            <h3 className =\"user-text\"> Email </h3>\n\n            <h3 className =\"user-text\"> Shipping Address </h3>\n\n            <h3 className =\"user-text\"> Subscription History </h3>\n            <p> Nothing yet, better get to shopping! </p>\n          </span>\n        </div> */}\n\n\n{/* \n        <div class=\"col s6 center-align\">\n          <img src={cheers} className=\"cheers-photo\" alt=\"Cup of coffee\" />\n        </div>\n      </div> */}\n    </>\n  );\n}\n\nexport default User;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,SAAS,GAAGN,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,SAASO,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAEd,MAAM;IAACC,OAAO;IAAEC,KAAK;IAAEC;EAAI,CAAC,GAAGV,QAAQ,CAACK,SAAS,CAAC;EAElD,IAAIG,OAAO,EAAE,oBAAON,OAAA;IAAAS,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAIN,KAAK,EAAE,oBAAOP,OAAA;IAAAS,QAAA,GAAG,SAAO,EAACF,KAAK,CAACO,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;;EAK/C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEF;;EAEE;EACA;EACA;EACA;;EAEA,oBAIEb,OAAA,CAAAE,SAAA;IAAAO,QAAA,EAEHD,IAAI,CAACO,KAAK,CAACC,GAAG,CAAED,KAAK,iBAClBf,OAAA;MAAAS,QAAA,GACGM,KAAK,CAACE,SAAS,EAAC,GAAC,EAACF,KAAK,CAACG,QAAQ;IAAA,GAD1BH,KAAK,CAACI,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEb,CACL;EAAC,gBA2DE,CAAC;AAEP;AAACR,EAAA,CApGQD,IAAI;EAAA,QAEoBN,QAAQ;AAAA;AAAAsB,EAAA,GAFhChB,IAAI;AAsGb,eAAeA,IAAI;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}